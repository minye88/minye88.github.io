var PlayerMovement=pc.createScript("playerMovement");PlayerMovement.attributes.add("speed",{type:"number",default:.09}),PlayerMovement.prototype.initialize=function(){this.app},PlayerMovement.worldDirection=new pc.Vec3,PlayerMovement.tempDirection=new pc.Vec3,PlayerMovement.prototype.update=function(e){var t=this.app,i=PlayerMovement.worldDirection;i.set(0,0,0);var r=PlayerMovement.tempDirection,a=this.entity.forward,o=this.entity.right,n=0,s=0;if(t.keyboard.isPressed(pc.KEY_A)&&(s+=1),t.keyboard.isPressed(pc.KEY_D)&&(s+=-1),t.keyboard.isPressed(pc.KEY_W)&&(n+=1),t.keyboard.isPressed(pc.KEY_S)&&(n+=-1),0!==n||0!==s){i.add(r.copy(a).mulScalar(s)),i.add(r.copy(o).mulScalar(n)),i.normalize();var p=new pc.Vec3(i.x*e,0,i.z*e);p.normalize().scale(this.speed),p.add(this.entity.getPosition()),this.entity.rigidbody.teleport(p)}this.entity.anim.setFloat("xDirection",n),this.entity.anim.setFloat("zDirection",s)};var GoalTrigger=pc.createScript("goalTrigger");GoalTrigger.attributes.add("side",{type:"string",default:"side not set"}),GoalTrigger.prototype.initialize=function(){this.entity.collision.on("triggerenter",this.onTriggerEnter,this)},GoalTrigger.prototype.update=function(r){},GoalTrigger.prototype.onTriggerEnter=function(r){console.log("GoalTrigger: "+this.side+" score a goal!"),this.app.root.findByName("ScoreManager").script.scoreManager.goalScored(this.side)};var ScoreManager=pc.createScript("scoreManager");ScoreManager.attributes.add("leftScore",{type:"number",default:0}),ScoreManager.attributes.add("rightScore",{type:"number",default:0}),ScoreManager.prototype.initialize=function(){},ScoreManager.prototype.update=function(e){},ScoreManager.prototype.goalScored=function(e){console.log("ScoreManager: ScoreManager.goalScored() called!"),"leftTeam"===e?++this.leftScore:"rightTeam"===e&&++this.rightScore,console.log("ScoreManager: this.leftScore = "+this.leftScore+", this.rightScore = "+this.rightScore),this.app.fire("scoreManager:goalScored",this.leftScore,this.rightScore)};var UpdateScore=pc.createScript("updateScore");UpdateScore.prototype.initialize=function(){var e=function(e,t){var o=e+" - "+t;console.log("UpdateScore: updated scoreline is "+o),this.entity.element.text=o}.bind(this);this.app.on("scoreManager:goalScored",e),this.on("destroy",(function(){this.app.off("scoreManager:goalScored",e)}))},UpdateScore.prototype.update=function(e){};